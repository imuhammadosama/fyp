import Guard from "../models/guard.model";
import Member from "../models/member.model";
import Alert from "../models/alerts.model";

require("dotenv").config();

const mongoose = require("mongoose");

const accountSid = process.env.TWILIO_ACCOUNT_SID;
const authToken = process.env.TWILIO_AUTH_TOKEN;
const twilioMobileNumber = process.env.TWILIO_NUMBER;

const client = require("twilio")(accountSid, authToken);

export const GetAllGuards = async (req, res) => {
  try {
    const { sector, block, memberID } = req.query;

    const allGuards = await Guard.find({
      sector,
      block,
    }).lean();

    const guards = await Promise.all(
      allGuards.map(async (guard) => {
        const alert = await Alert.findOne({
          guardID: guard._id,
          memberID: mongoose.Types.ObjectId(memberID),
          status: "Unresolved",
        });
        if (alert) {
          return {
            ...guard,
            canGenerateAlert: false,
            alert,
          };
        }
        return {
          ...guard,
          canGenerateAlert: true,
        };
      })
    );

    return res.status(200).json({ guards });
  } catch (e) {
    return res.status(500).json({
      message: e.message,
    });
  }
};

export const ResolveAlert = async (req, res) => {
  try {
    const { _id } = req.body;

    const alert = await Alert.findById(_id);

    if (alert) {
      alert.status = "Resolved";

      await alert.save();

      return res.status(200).json({ resolved: true });
    }
    return res.status(500).json({ message: "Error finding alert!" });
  } catch (e) {
    return res.status(500).json({
      message: e.message,
    });
  }
};

export const GenerateAlert = async (req, res) => {
  try {
    const { memberID, guardName, guardMobile, guardID } = req.body;

    const member = await Member.findById(memberID).lean();

    let num = guardMobile;

    if (guardMobile.startsWith("0")) {
      num = `+92${guardMobile.substring(1)}`;
    }

    const alert = `A member needs some help, come to the House # ${member.houseNumber}, Sector ${member.sector}, Block ${member.block}. Member's name is ${member.name} and contact number is ${member.mobile}.`;

    client.messages
      .create({
        body: alert,
        from: twilioMobileNumber,
        to: num,
      })
      .then(async (message) => {
        console.log("Message Status: ", message.status);

        const alert = new Alert({
          title: `Alert Generated by ${member.name}`,
          description: `${member.name} (${member.mobile}) generated an alert for the guard named ${guardName} (${guardMobile}).`,
          memberID: mongoose.Types.ObjectId(memberID),
          guardID: mongoose.Types.ObjectId(guardID),
        });

        await alert.save();

        return res.status(200).json({ alertGenerated: true });
      })
      .catch((err) => {
        console.log(err);
        return res.status(500).json({
          message: "Error while sending alert. Please try again.",
        });
      });
  } catch (e) {
    return res.status(500).json({
      message: e.message,
    });
  }
};
